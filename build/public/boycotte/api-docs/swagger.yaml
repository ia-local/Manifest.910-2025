openapi: 3.0.0
info:
  title: API Enquête Parlementaire & Manifestation
  description: API pour gérer les données d'une enquête parlementaire, des pétitions, et des actions de manifestation.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Serveur de développement local
tags:
  - name: Flux financiers
    description: Gestion des transactions et flux financiers suspects.
  - name: Affaires
    description: Gestion de la chronologie des affaires de l'enquête.
  - name: Pétitions
    description: Gestion des pétitions citoyennes.
  - name: Entités
    description: Gestion des entités (entreprises, individus, etc.) liées à l'enquête.
  - name: Caisse de manifestation
    description: Gestion des transactions de la caisse de manifestation.
  - name: Outils IA
    description: Endpoints pour les outils d'intelligence artificielle.
  - name: Boycotts
    description: Gestion des listes de boycott (films, banques, commerces, produits, etc.).
  - name: Taxation
    description: Définition des règles de taxation pour la caisse de manifestation.

paths:
  /api/financial-flows:
    get:
      tags:
        - Flux financiers
      summary: Récupère tous les flux financiers.
      responses:
        '200':
          description: Liste de tous les flux financiers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FinancialFlow'
    post:
      tags:
        - Flux financiers
      summary: Crée un nouveau flux financier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancialFlowInput'
      responses:
        '201':
          description: Flux financier créé avec succès.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialFlow'
  
  /api/financial-flows/{id}:
    put:
      tags:
        - Flux financiers
      summary: Met à jour un flux financier existant.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancialFlowInput'
      responses:
        '200':
          description: Flux financier mis à jour.
        '404':
          description: Flux financier non trouvé.
    delete:
      tags:
        - Flux financiers
      summary: Supprime un flux financier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Flux financier supprimé avec succès.
        '404':
          description: Flux financier non trouvé.

  /api/affaires:
    get:
      tags:
        - Affaires
      summary: Récupère la chronologie des affaires.
      responses:
        '200':
          description: Chronologie des affaires récupérée avec succès.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Affaire'

  /api/affaires/event:
    post:
      tags:
        - Affaires
      summary: Ajoute un nouvel événement à la chronologie d'une affaire.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffaireEvent'
      responses:
        '201':
          description: Événement ajouté avec succès.

  /api/petitions:
    get:
      tags:
        - Pétitions
      summary: Récupère toutes les pétitions.
      responses:
        '200':
          description: Liste de toutes les pétitions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Petition'
    post:
      tags:
        - Pétitions
      summary: Crée une nouvelle pétition.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetitionInput'
      responses:
        '201':
          description: Pétition créée avec succès.

  /api/petitions/{id}:
    put:
      tags:
        - Pétitions
      summary: Met à jour une pétition existante.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetitionInput'
      responses:
        '200':
          description: Pétition mise à jour.
        '404':
          description: Pétition non trouvée.
    delete:
      tags:
        - Pétitions
      summary: Supprime une pétition.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pétition supprimée avec succès.
        '404':
          description: Pétition non trouvée.

  /api/entities:
    get:
      tags:
        - Entités
      summary: Récupère toutes les entités.
      responses:
        '200':
          description: Liste de toutes les entités.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
    post:
      tags:
        - Entités
      summary: Crée une nouvelle entité.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityInput'
      responses:
        '201':
          description: Entité créée avec succès.

  /api/entities/{id}:
    put:
      tags:
        - Entités
      summary: Met à jour une entité existante.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityInput'
      responses:
        '200':
          description: Entité mise à jour.
        '404':
          description: Entité non trouvée.
    delete:
      tags:
        - Entités
      summary: Supprime une entité.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Entité supprimée avec succès.
        '404':
          description: Entité non trouvé.
          
  /api/caisse-manifestation:
    get:
      tags:
        - Caisse de manifestation
      summary: Récupère l'état de la caisse de manifestation.
      responses:
        '200':
          description: État de la caisse.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaisseManifestation'
  
  /api/caisse-manifestation/transaction:
    post:
      tags:
        - Caisse de manifestation
      summary: Ajoute une transaction à la caisse.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaisseTransactionInput'
      responses:
        '201':
          description: Transaction ajoutée.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaisseTransaction'
                
  /api/ai/generate-entity:
    post:
      tags:
        - Outils IA
      summary: Génère les données d'une entité à partir d'une requête textuelle.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: La phrase pour générer les données de l'entité.
      responses:
        '200':
          description: Données de l'entité générées.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityInput'
  
  /api/boycotts:
    get:
      tags:
        - Boycotts
      summary: Récupère toutes les listes de boycott.
      parameters:
        - name: type
          in: query
          description: Filtre la liste par type de boycott (movie, bank, commerce, product, etc.).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Liste de tous les articles à boycotter.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boycott'
    post:
      tags:
        - Boycotts
      summary: Ajoute un nouvel élément à boycotter, en l'associant à une règle de taxation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoycottInput'
      responses:
        '201':
          description: Élément ajouté avec succès à la liste de boycott.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boycott'
                
  /api/boycotts/{id}:
    put:
      tags:
        - Boycotts
      summary: Met à jour un élément de la liste de boycott.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoycottInput'
      responses:
        '200':
          description: Élément mis à jour.
        '404':
          description: Élément non trouvé.
    delete:
      tags:
        - Boycotts
      summary: Supprime un élément de la liste de boycott.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Élément supprimé avec succès.
        '404':
          description: Élément non trouvé.
  
  /api/taxes:
    get:
      tags:
        - Taxation
      summary: Récupère la liste de toutes les règles de taxation pour la caisse de manifestation.
      responses:
        '200':
          description: Liste des règles de taxation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax'

components:
  schemas:
    FinancialFlow:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        amount:
          type: number
        currency:
          type: string
        date:
          type: string
          format: date
        sender:
          type: string
        receiver:
          type: string
        is_suspicious:
          type: boolean
    FinancialFlowInput:
      type: object
      properties:
        type:
          type: string
        amount:
          type: number
        currency:
          type: string
        date:
          type: string
          format: date
        sender:
          type: string
        receiver:
          type: string
        is_suspicious:
          type: boolean
      required:
        - type
        - amount
        - currency
        - date
        - sender
        - receiver
    Affaire:
      type: object
      properties:
        chronology:
          type: array
          items:
            $ref: '#/components/schemas/AffaireYear'
    AffaireYear:
      type: object
      properties:
        year:
          type: integer
        events:
          type: array
          items:
            $ref: '#/components/schemas/AffaireEvent'
    AffaireEvent:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        description:
          type: string
    Petition:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        topic:
          type: string
        targeted_official_or_policy:
          type: string
        number_of_signatures:
          type: integer
        date_started:
          type: string
          format: date
        status:
          type: string
    PetitionInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        topic:
          type: string
        targeted_official_or_policy:
          type: string
        number_of_signatures:
          type: integer
      required:
        - title
        - description
        - topic
        - targeted_official_or_policy
        - number_of_signatures
    Entity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        description:
          type: string
        geo:
          $ref: '#/components/schemas/GeoCoordinates'
    EntityInput:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        geo:
          $ref: '#/components/schemas/GeoCoordinates'
      required:
        - name
        - type
        - description
        - geo
    GeoCoordinates:
      type: object
      properties:
        lat:
          type: number
        lon:
          type: number
    CaisseManifestation:
      type: object
      properties:
        solde:
          type: number
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/CaisseTransaction'
    CaisseTransaction:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [ "entrée", "sortie" ]
        montant:
          type: number
        description:
          type: string
        date:
          type: string
          format: date
    CaisseTransactionInput:
      type: object
      properties:
        type:
          type: string
          enum: [ "entrée", "sortie" ]
        montant:
          type: number
        description:
          type: string
        date:
          type: string
          format: date
      required:
        - type
        - montant
        - description
    Boycott:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          description: Type de boycott.
        name:
          type: string
          description: Nom de l'élément à boycotter (ex : "Société Générale", "Macif").
        reason:
          type: string
          description: Raison détaillée du boycott.
        targets:
          type: array
          description: Liste des cibles spécifiques.
          items:
            $ref: '#/components/schemas/BoycottTarget'
    BoycottInput:
      type: object
      properties:
        type:
          type: string
          description: Type de boycott.
        name:
          type: string
          description: Nom de l'élément à boycotter.
        reason:
          type: string
          description: Raison détaillée du boycott.
        targets:
          type: array
          description: Liste des cibles spécifiques.
          items:
            $ref: '#/components/schemas/BoycottTargetInput'
      required:
        - type
        - name
        - reason
        - targets
    BoycottTarget:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Nom du produit/service/entité ciblé(e) (ex: "Billet de cinéma").
        tax_id:
          type: string
          description: Référence à l'ID de la règle de taxation applicable.
    BoycottTargetInput:
      type: object
      properties:
        name:
          type: string
          description: Nom du produit/service/entité ciblé(e).
        tax_id:
          type: string
          description: Référence à l'ID de la règle de taxation applicable.
      required:
        - name
        - tax_id
    Tax:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique de la règle de taxation.
          enum: ["tax_tfa", "tax_production", "tax_vat", "tax_campaign"]
        name:
          type: string
          description: Nom de la taxe.
        description:
          type: string
          description: Description de la taxe.
        rate:
          type: number
          description: Taux de taxation à appliquer (ex: 0.2 pour 20%).
        applicable_to:
          type: string
          description: Domaine d'application de la taxe.